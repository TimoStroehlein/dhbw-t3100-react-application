version: '3'
services:
  dhbw-t3100-frontend:
    build: ./frontend
    image: dhbw-t3100-frontend
    command: npm run start
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    networks:
      development:

  dhbw-t3100-backend:
    build: ./backend
    image: dhbw-t3100-backend
    command: npm run start
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    networks:
      development:

  dhbw-t3100-postgres:
    image: "postgres:latest"
    env_file:
      - .env
    volumes:
    - database:/var/lib/postgres/data
    - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      development:

  dhbw-t3100-pgadmin:
    image: dpage/pgadmin4:4.25
    env_file:
      - .env
    volumes:
      - pgadmin:/var/lib/pgadmin4/storage
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
    ports:
      - "${PGADMIN_LISTEN_PORT}:${PGADMIN_LISTEN_PORT}"
    depends_on:
      - dhbw-t3100-postgres
    links:
      - dhbw-t3100-postgres
    networks:
      development:

volumes:
  database:
  pgadmin:

networks:
  development:
    driver: bridge